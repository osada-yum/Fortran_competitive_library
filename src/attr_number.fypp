#!: Types implement numeric operators such as `+`, `-`, `*`, `/`, `min`, `max`.
#:set NUMBER_TYPES = []
#:def add_attr_number(typename, zero)
#:mute
  #: global NUMBER_TYPES
  #:set NUMBER_TYPES = NUMBER_TYPES + [typename]
  #:set typename_underscore = typename.replace('(', '_').replace(')', '_')
  $: globalvar(f"NUMBER_{typename_underscore}")
  $: setvar(f"NUMBER_{typename_underscore}", True)

  $: globalvar(f"ZERO_{typename_underscore}")
  $: setvar(f"ZERO_{typename_underscore}", zero)
#:endmute
#:enddef add_attr_number

#:def GET_ZERO(typename)
  #:set typename_underscore = typename.replace('(', '_').replace(')', '_')
${getvar(f"ZERO_{typename_underscore}")}$
#:enddef

#:def number_block(code, typename)
  #:if defined(f"NUMBER_{typename}".replace('(', '_').replace(')', '_'))
  $: code
  #:endif
#:enddef number_block

#:set ikinds = ["int8", "int16", "int32", "int64"]
#:set types = [f"integer({kind})" for kind in ikinds]
#:set zeros = [f"0_{kind}" for kind in ikinds]

#:set rkinds = ["real32", "real64"]
#:set types = types + [f"real({kind})" for kind in rkinds]
#:set zeros = zeros + [f"0.0_{kind}" for kind in rkinds]

#:for type, zero in zip(types, zeros)
  $: add_attr_number(typename = type, zero = zero)
#:endfor
#:del types
#:del ikinds
#:del rkinds
#:del zeros
